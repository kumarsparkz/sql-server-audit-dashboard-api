// <auto-generated />
using System;
using AuditDashboard.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Audit_api.Migrations
{
    [DbContext(typeof(AuditDashboardContext))]
    [Migration("20250830062036_AddEnvironmentToMonitoredServers")]
    partial class AddEnvironmentToMonitoredServers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AuditDashboard.Models.ActiveAlert", b =>
                {
                    b.Property<long>("ActiveAlertID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ActiveAlertID"));

                    b.Property<string>("AcknowledgedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("AcknowledgedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AlertDefinitionID")
                        .HasColumnType("int");

                    b.Property<string>("AlertMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("CurrentValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("FirstOccurrence")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastOccurrence")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OccurrenceCount")
                        .HasColumnType("int");

                    b.Property<string>("ResolvedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResolvedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ServerID")
                        .HasColumnType("int");

                    b.Property<string>("Severity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ThresholdValue")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ActiveAlertID");

                    b.HasIndex("AlertDefinitionID");

                    b.HasIndex("ServerID");

                    b.ToTable("ActiveAlerts");
                });

            modelBuilder.Entity("AuditDashboard.Models.AlertDefinition", b =>
                {
                    b.Property<int>("AlertDefinitionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlertDefinitionID"));

                    b.Property<string>("AlertName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AlertType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailNotification")
                        .HasColumnType("bit");

                    b.Property<string>("EmailRecipients")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("MetricName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Operator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Severity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Threshold")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TimeWindow")
                        .HasColumnType("int");

                    b.HasKey("AlertDefinitionID");

                    b.ToTable("AlertDefinitions");
                });

            modelBuilder.Entity("AuditDashboard.Models.DashboardUser", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("DashboardUsers");
                });

            modelBuilder.Entity("AuditDashboard.Models.DatabaseMetric", b =>
                {
                    b.Property<long>("DatabaseMetricID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("DatabaseMetricID"));

                    b.Property<DateTime>("CollectionTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DataSize")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DataUsed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DatabaseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DatabaseSize")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LogSize")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PercentUsed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ServerID")
                        .HasColumnType("int");

                    b.HasKey("DatabaseMetricID");

                    b.HasIndex("ServerID");

                    b.ToTable("DatabaseMetrics");
                });

            modelBuilder.Entity("AuditDashboard.Models.MonitoredServer", b =>
                {
                    b.Property<int>("ServerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServerID"));

                    b.Property<string>("ConnectionString")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Environment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastHeartbeat")
                        .HasColumnType("datetime2");

                    b.Property<bool>("MonitoringEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("ServerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ServerID");

                    b.ToTable("MonitoredServers");
                });

            modelBuilder.Entity("AuditDashboard.Models.QueryPerformance", b =>
                {
                    b.Property<long>("QueryPerformanceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("QueryPerformanceID"));

                    b.Property<decimal>("AvgCPUTime")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AvgDuration")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("CollectionTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("ExecutionCount")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastExecutionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("QueryHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QueryText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ServerID")
                        .HasColumnType("int");

                    b.Property<long>("TotalReads")
                        .HasColumnType("bigint");

                    b.Property<long>("TotalWrites")
                        .HasColumnType("bigint");

                    b.HasKey("QueryPerformanceID");

                    b.HasIndex("ServerID");

                    b.ToTable("QueryPerformance");
                });

            modelBuilder.Entity("AuditDashboard.Models.SecurityEvent", b =>
                {
                    b.Property<long>("SecurityEventID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SecurityEventID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EventTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ServerID")
                        .HasColumnType("int");

                    b.Property<string>("Severity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SecurityEventID");

                    b.HasIndex("ServerID");

                    b.ToTable("SecurityEvents");
                });

            modelBuilder.Entity("AuditDashboard.Models.ServerMetric", b =>
                {
                    b.Property<long>("ServerMetricID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ServerMetricID"));

                    b.Property<DateTime>("CollectionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("MetricName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetricType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MetricValue")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("ServerID")
                        .HasColumnType("int");

                    b.Property<string>("UnitOfMeasure")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ServerMetricID");

                    b.HasIndex("ServerID");

                    b.ToTable("ServerMetrics");
                });

            modelBuilder.Entity("AuditDashboard.Models.UserSession", b =>
                {
                    b.Property<long>("UserSessionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("UserSessionID"));

                    b.Property<int>("CPUTime")
                        .HasColumnType("int");

                    b.Property<DateTime>("CollectionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Command")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatabaseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("DiskIO")
                        .HasColumnType("bigint");

                    b.Property<string>("HostName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastRequestEndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastRequestStartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LoginName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LoginTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("NetAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NetLibrary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgramName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SPIDNumber")
                        .HasColumnType("int");

                    b.Property<int>("ServerID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserSessionID");

                    b.HasIndex("ServerID");

                    b.ToTable("UserSessions");
                });

            modelBuilder.Entity("AuditDashboard.Models.ActiveAlert", b =>
                {
                    b.HasOne("AuditDashboard.Models.AlertDefinition", "AlertDefinition")
                        .WithMany()
                        .HasForeignKey("AlertDefinitionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuditDashboard.Models.MonitoredServer", "MonitoredServer")
                        .WithMany("ActiveAlerts")
                        .HasForeignKey("ServerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AlertDefinition");

                    b.Navigation("MonitoredServer");
                });

            modelBuilder.Entity("AuditDashboard.Models.DatabaseMetric", b =>
                {
                    b.HasOne("AuditDashboard.Models.MonitoredServer", "MonitoredServer")
                        .WithMany()
                        .HasForeignKey("ServerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MonitoredServer");
                });

            modelBuilder.Entity("AuditDashboard.Models.QueryPerformance", b =>
                {
                    b.HasOne("AuditDashboard.Models.MonitoredServer", "MonitoredServer")
                        .WithMany()
                        .HasForeignKey("ServerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MonitoredServer");
                });

            modelBuilder.Entity("AuditDashboard.Models.SecurityEvent", b =>
                {
                    b.HasOne("AuditDashboard.Models.MonitoredServer", "MonitoredServer")
                        .WithMany()
                        .HasForeignKey("ServerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MonitoredServer");
                });

            modelBuilder.Entity("AuditDashboard.Models.ServerMetric", b =>
                {
                    b.HasOne("AuditDashboard.Models.MonitoredServer", "MonitoredServer")
                        .WithMany("ServerMetrics")
                        .HasForeignKey("ServerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MonitoredServer");
                });

            modelBuilder.Entity("AuditDashboard.Models.UserSession", b =>
                {
                    b.HasOne("AuditDashboard.Models.MonitoredServer", "MonitoredServer")
                        .WithMany()
                        .HasForeignKey("ServerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MonitoredServer");
                });

            modelBuilder.Entity("AuditDashboard.Models.MonitoredServer", b =>
                {
                    b.Navigation("ActiveAlerts");

                    b.Navigation("ServerMetrics");
                });
#pragma warning restore 612, 618
        }
    }
}
